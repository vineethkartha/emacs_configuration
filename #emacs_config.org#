#+TITLE: Vineeth's Emacs configuration
#+DESCRIPTION: An org-babel based emacs configuration
#+LANGUAGE: en
#+PROPERTY: results silent

The ~/.emacs file needs to have the following lines
(require 'org)
(org-babel-load-file "~/.emacs_config/emacs_config.org") 
* Install Packages
  #+BEGIN_SRC emacs-lisp
    (require 'package)
    (package-initialize)
    (add-to-list 'package-archives
		 '("melpa" . "https://stable.melpa.org/packages/"))
    (add-to-list 'package-archives
		 '("org" . "http://orgmode.org/elpa/"))

    (package-initialize)
    (when (not package-archive-contents)  
      (package-refresh-contents))

    (defvar my-packages
      '(
	use-package
	elpy
	flycheck
	ace-window
	org-bullets
	powerline
	)
      )

    (dolist (pkg my-packages)
      (unless (package-installed-p pkg)
	(package-install pkg)))
  #+END_SRC
* Helper Functions
  #+BEGIN_SRC emacs-lisp
    (defun enable-flycheck()
      (flycheck-mode 1)
      )

    (defun set-local-key-for-hs-mode()
      (hs-minor-mode 1)
      (local-set-key (kbd "M-;") 'hs-toggle-hiding)
      )

    (defun copy-line-above ()
      (interactive)
      (previous-line)
      (setq line (buffer-substring-no-properties
		  (line-beginning-position)
		  (line-end-position))
	    )
      (next-line)
      (insert line)
      )
  #+END_SRC
* Global Settings
  #+BEGIN_SRC emacs-lisp
    (global-linum-mode 1)
    (ido-mode 1)
    (electric-pair-mode 1)
    (use-package powerline
      :ensure t
      :config
      (powerline-default-theme)
      )
  #+END_SRC
* Coding Environments
** Setting up company mode
      #+BEGIN_SRC emacs-lisp
       (use-package company
	 :ensure t
	 :config
	 (setq company-idle-delay 0)
	 (setq company-minimum-prefix-length 2)
	 (setq global-company-mode 1))

       (use-package company-irony
	 :ensure t
	 :config
	 (require 'company)
	 (add-to-list 'company-backends 'company-irony)
	 )

       ;sudo apt-get install libclang-9-dev
       ;M-x irony-install-server
       (use-package irony
	 :ensure t
	 :config
	 (add-hook 'c++-mode-hook 'irony-mode)
	 (add-hook 'c-mode-hook 'irony-mode)
	 (add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options))
     #+END_SRC
*** Setting up company mode with C++
     #+BEGIN_SRC emacs-lisp
       (with-eval-after-load 'company
	 (add-hook 'c++-mode-hook 'company-mode)
	 (add-hook 'c-mode-hook 'company-mode)
	 (add-hook 'emacs-lisp-mode-hook 'company-mode)
	 )
	 (add-hook 'c++-mode-hook (
			  lambda()
				(enable-flycheck)
				(set-local-key-for-hs-mode)
				))
     #+END_SRC
** Python Setup 
     #+BEGIN_SRC emacs-lisp
       (elpy-enable)
       (setq elpy-rpc-virtualenv-path 'current)
     #+END_SRC
* Window Navigation
  #+BEGIN_SRC emacs-lisp
    (use-package ace-window
      :ensure t
      :config
      (global-set-key (kbd "M-o") 'ace-window)
      (setq aw-keys '(?a ?s ?d ?f ?g ?h ?j ?k ?l))
      )
  #+END_SRC
* Org Mode
  #+BEGIN_SRC emacs-lisp
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
  (setq org-ellipsis "->")
  (org-babel-do-load-languages
  'org-babel-load-languages '((C . t) (shell . t)))
  #+END_SRC


